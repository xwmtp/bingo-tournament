openapi: 3.0.3

info:
  title: Bingo Tournament API
  description: API used to schedule races and query race results
  version: 0.0.13

servers:
  - url: http://localhost:8080/api
    description: Local development environment

paths:
  /health:
    get:
      summary: Health Endpoint
      description: Returns a success immediately
      operationId: getHealth
      responses:
        204:
          description: The application is running
  /user:
    get:
      summary: Get logged in user
      description: Returns the details of the current user, if logged in.
      operationId: getUser
      responses:
        200:
          description: The user details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: No user logged in
  /allUsers:
    get:
      summary: Get user list
      description: Returns a list of all users. Only admins can retrieve this information.
      operationId: getAllUsers
      responses:
        200:
          description: The user list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /entrants:
    get:
      summary: Get entrant list
      description: Returns a list of all users with the ENTRANT role.
      operationId: getEntrants
      responses:
        200:
          description: The entrant list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        401:
          description: No user logged in
        403:
          description: Insufficient rights
  /signup:
    post:
      summary: Sign up for the tournament
      description: Signs the current user up for the tournament
      operationId: signUp
      responses:
        204:
          description: User is signed up
        401:
          description: No user logged in
    delete:
      summary: Withdraw from the tournament
      description: Withdraws the current user from the tournament
      operationId: withdraw
      responses:
        204:
          description: User is withdrawn
        401:
          description: No user logged in
  /role:
    put:
      summary: Add a role (Admin only)
      description: Adds a role to a user. The ADMIN role cannot be added or removed.
      operationId: addRole
      parameters:
        - name: userId
          required: true
          in: query
          description: ID of the user who will receive the new role
          schema:
            type: string
        - name: role
          required: true
          in: query
          description: The role
          schema:
            $ref: "#/components/schemas/Role"
      responses:
        204:
          description: Role added successfully
        404:
          description: User not found
    delete:
      summary: Remove a role (Admin only)
      description: Removes a role from a user. The ADMIN role cannot be added or removed.
      operationId: removeRole
      parameters:
        - name: userId
          required: true
          in: query
          description: ID of the user who will have a role removed
          schema:
            type: string
        - name: role
          required: true
          in: query
          description: The role
          schema:
            $ref: "#/components/schemas/Role"
      responses:
        204:
          description: Role removed successfully
        404:
          description: User not found

  /matches:
    get:
      summary: Load match data
      description: Returns a list of all matches of the tournament. It is possible to filter the list by state and/or the current user.
      operationId: getAllMatches
      parameters:
        - name: filter
          required: false
          in: query
          description: State for matches to be filtered by
          schema:
            $ref: "#/components/schemas/MatchState"
        - name: onlyLoggedIn
          required: false
          in: query
          description: Filter only for matches of the logged in user
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: List of matches
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "#/components/schemas/Match"
    post:
      summary: Add matches to the tournament
      description: Allows administrators to add multiple matches to the ongoing tournament.
      operationId: addMatches
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                $ref: "#/components/schemas/NewMatch"
      responses:
        200:
          description: Matches successfully added
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "#/components/schemas/Match"
        403:
          description: Insufficient rights
    delete:
      summary: Delete matches from the tournament
      description: Allows administrators to delete multiple matches from the tournament
      operationId: deleteMatches
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        204:
          description: Matches successfully deleted
        403:
          description: Insufficient rights
        404:
          description: At least one match was not found
    patch:
      summary: Update a match
      description: >
        Allows administrators and entrants to update the information of a single match.Entrants may only update their
        own matches.

        The time of the race must be in the future.

        Once a Racetime ID is saved the time cannot be adjusted. The Racetime ID can only be changed by
        administrators once set.

        Only one field in the body may be set in each request.
      operationId: updateMatch
      parameters:
        - name: matchId
          required: true
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/UpdateMatch"
      responses:
        200:
          description: Match successfully updated
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Match"
        400:
          description: Body doesn't match specification, no field is set, or multiple fields are set
        403:
          description: Insufficient rights
        404:
          description: Match not found
        422:
          description: >
            The specified racetime race was not recorded or does not include all entrants, or a time is being set after
            the race has been recorded.
        502:
          description: An error occurred while communicating with the Racetime server

  /restream:
    put:
      summary: Add restream info to a match
      description: >
        Set the URL of the restream channel for a given match. Restreamers are allowed to set a channel while the field
        is empty, admins may overwrite.
      operationId: setRestreamChannel
      parameters:
        - name: matchId
          required: true
          in: query
          schema:
            type: string
            format: uuid
        - name: restreamChannel
          required: false
          in: query
          description: The URL to the restream. When empty any existing URL will be removed from the match.
          schema:
            type: string
            format: uri
      responses:
        204:
          description: URL successfully updated
        404:
          description: Match not found
        409:
          description: The URL is already set and may only be updated by admins

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        avatar:
          type: string
          format: uri
        twitchChannel:
          type: string
          format: uri
      required:
        - id
        - name
        - roles
    Role:
      type: string
      enum:
        - ADMIN
        - ENTRANT
        - RESTREAMER
    Entrant:
      type: object
      properties:
        user:
          type: object
          $ref: "#/components/schemas/User"
        state:
          type: string
          $ref: "#/components/schemas/EntrantState"
        finishTime:
          type: string
          format: duration
          description: Entrant's finish time as ISO 8601 duration
        finishTimeSeconds:
          type: integer
          format: int64
          description: Entrant's finish time in seconds
        racetimePlace:
          type: integer
          format: int32
      required:
        - user
        - state
    Match:
      type: object
      properties:
        id:
          type: string
          format: uuid
        entrants:
          type: array
          items:
            $ref: "#/components/schemas/Entrant"
        state:
          type: string
          $ref: "#/components/schemas/MatchState"
        round:
          type: string
        scheduledTime:
          type: string
          format: date-time
        racetimeId:
          type: string
        restreamChannel:
          type: string
          format: uri
      required:
        - id
        - entrants
        - state
    NewMatch:
      type: object
      properties:
        entrantIds:
          type: array
          items:
            type: string
        round:
          type: string
      required:
        - entrantIds
        - round
    UpdateMatch:
      type: object
      description: A partial object with race information used to update an already existing race.
      properties:
        scheduledTime:
          type: string
          format: date-time
        racetimeId:
          type: string
          pattern: '[a-zA-Z0-9-_]+/[a-zA-Z0-9-_]+'
          description: Game abbreviation and slug of the race, e.g. "oot/superb-ingo-1234"
    EntrantState:
      type: string
      enum:
        - PRE_RACE
        - FINISHED
        - DID_NOT_FINISH
    MatchState:
      type: string
      enum:
        - NEW
        - SCHEDULED
        - FINISHED
